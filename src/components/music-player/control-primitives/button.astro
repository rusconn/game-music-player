---
import type { HTMLAttributes } from "astro/types";

type Props = Omit<HTMLAttributes<"button">, "type">;

const { props } = Astro;
const { id, class: class_, ...rest } = props;
---

<control-button {...{ id, class: class_ }}>
  <button type="button" {...rest}>
    <slot />
  </button>
</control-button>

<script>
  export class ControlButtonElement extends HTMLElement {
    #button!: HTMLButtonElement;

    connectedCallback() {
      this.#button = this.querySelector("button")!;
    }

    enable() {
      this.#button.removeAttribute("disabled");
    }

    disable() {
      this.#button.setAttribute("disabled", "");
    }
  }

  if (!customElements.get("control-button")) {
    customElements.define("control-button", ControlButtonElement);
  }
</script>

<style>
  control-button {
    display: flex;
    align-items: center;

    & button {
      inline-size: 1.375rem;
      aspect-ratio: 1;
      position: relative;
      background-color: transparent;
      border: none;
      cursor: pointer;
      color: currentColor;

      &:disabled {
        cursor: not-allowed;
        color: #aaa;
      }
    }
  }
</style>
