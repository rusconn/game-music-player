---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"div">;

const { props } = Astro;
---

<title-display {...props}>
  <span class="title">(No music selected)</span>
  <span class="artist-and-album">-</span>
</title-display>

<script>
  import type { Music } from "../../models/music";

  export class TitleDisplayElement extends HTMLElement {
    #title!: HTMLSpanElement;
    #artistAndAlbum!: HTMLSpanElement;

    connectedCallback() {
      this.#title = this.querySelector(".title")!;
      this.#artistAndAlbum = this.querySelector(".artist-and-album")!;
    }

    load({ file, metadata }: Music) {
      const { common } = metadata;
      const { title, artist, album } = common;

      this.#title.textContent = title?.trim() || file.name;

      const filtered = [artist?.trim(), album?.trim()]
        .filter((x) => x != null)
        .filter((x) => x !== "");

      this.#artistAndAlbum.textContent =
        filtered.length === 2 //
          ? filtered.join(" - ")
          : filtered.length === 1
            ? filtered[0]
            : "-";
    }
  }

  if (!customElements.get("title-display")) {
    customElements.define("title-display", TitleDisplayElement);
  }
</script>

<style>
  title-display {
    display: flex;
    flex-direction: column;
    white-space: nowrap;
    text-align: center;

    span {
      overflow-inline: hidden;
      text-overflow: ellipsis;
      user-select: all;

      &.artist-and-album {
        color: #a8a8a8;
      }
    }
  }
</style>
